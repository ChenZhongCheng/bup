#!/usr/bin/env bash
. ./wvtest-bup.sh

set -o pipefail

top="$(WVPASS pwd)" || exit $?
tmpdir="$(WVPASS wvmktempdir)" || exit $?

bup() { "$top/bup" "$@"; }

WVPASS cd "$tmpdir"

WVPASS mkdir src src/x src/x/y
WVPASS bup random 1k > src/1
WVPASS bup random 1k > src/x/2

export BUP_DIR=get-src
WVPASS bup init
WVPASS bup index src
WVPASS bup save -tcn src src | tee save-output.log
src_tree1_id=$(WVPASS head -n 1 save-output.log) || exit $?
src_commit1_id=$(WVPASS tail -n -1 save-output.log) || exit $?
src_save1=$(WVPASS bup ls src | WVPASS head -n 1) || exit $?
WVPASS cp -a src src-1

WVPASS echo -n 'xyzzy' > src/tiny-file
WVPASS bup index src
WVPASS bup tick # Make sure the save names are different.
WVPASS bup save -tcn src src | tee save-output.log
src_tree2_id=$(WVPASS head -n 1 save-output.log) || exit $?
src_commit2_id=$(WVPASS tail -n -1 save-output.log) || exit $?
src_save2=$(WVPASS bup ls src | WVPASS head -n 2 | WVPASS tail -n 1) || exit $?
WVPASS mv src src-2

# With a tiny file, we'll get a single blob, not a chunked tree.
tinyfile_id=$(WVPASS bup ls -s "src/latest$(pwd)/src/tiny-file" \
    | WVPASS cut -d' ' -f 1) || exit $?


reset-bup-dest()
{
    export BUP_DIR=get-dest
    WVPASS rm -rf "$BUP_DIR"
    WVPASS bup init
}


verify-get()
{
    local save_name="$1"
    local orig_dir="$2"
    local get_log="$3"
    local tree_id="$4"
    local commit_id="$5"
    WVPASS rm -rf restore
    WVPASS bup restore -C restore "$save_name$(pwd)/src"
    WVPASS "$top/t/compare-trees" -c "$orig_dir/" restore/src/

    local orig_git_dir="$GIT_DIR"
    export GIT_DIR="$BUP_DIR"
    dest_tree_id=$(WVPASS head -n 1 "$get_log") || exit $?
    dest_commit_id=$(WVPASS tail -n -1 "$get_log") || exit $?
    WVPASSEQ "$tree_id" "$dest_tree_id"
    if test "$commit_id"; then
        WVPASSEQ "$commit_id" "$dest_commit_id"
    fi
    WVPASS git ls-tree $dest_tree_id
    WVPASS git cat-file commit $dest_commit_id | head -n 1 \
        | WVPASS grep "^tree $dest_tree_id\$"
    if test "$orig_git_dir"; then
        export GIT_DIR="$orig_git_dir"
    else
        unset GIT_DIR
    fi
}


WVSTART "in-repository copies"
WVPASS bup get -v -ct -n local-dup src | tee get.log
WVPASS verify-get local-dup/"$src_save2" src-2 get.log "$src_tree2_id"


WVSTART "append save(s) to branch"

WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src src/"$src_save1" | tee get.log
WVPASS verify-get src-copy/"$src_save1" src-1 get.log "$src_tree1_id"
WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src src/"$src_save2" | tee get.log
WVPASS verify-get src-copy/"$src_save2" src-2 get.log "$src_tree2_id"
WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src src/latest | tee get.log
WVPASS verify-get src-copy/"$src_save2" src-2 get.log "$src_tree2_id"
# Quick sanity check of commit message content.
export GIT_DIR=get-dest
WVPASS git log --all | WVPASS grep -q 'bup save'
WVPASS git log --all | WVPASS grep -q 'Generated by command:'


WVSTART "append set to branch"
WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src src | tee get.log
WVPASS verify-get src-copy/"$src_save2" src-2 get.log "$src_tree2_id"


WVSTART "append tree to branch"
WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src "$src_tree1_id" | tee get.log
WVPASS verify-get src-copy/latest src-1 get.log "$src_tree1_id"


WVSTART "append commit to branch"
WVPASS reset-bup-dest
WVPASS bup get -v -ct -n src-copy -s get-src "$src_commit1_id" | tee get.log
WVPASS verify-get src-copy/latest src-1 get.log "$src_tree1_id"


WVSTART "append non-tree to branch fails"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVFAIL bup get -v -n src-copy -s get-src /
WVFAIL bup get -v -n src-copy -s get-src "$tinyfile_id"


WVSTART "get random blob"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVPASS bup get -v -ct -s get-src "$tinyfile_id" | tee get.log
GIT_DIR=get-dest WVPASS git cat-file blob "$tinyfile_id" > restored-item
WVPASSEQ xyzzy "$(< restored-item)"
WVPASS rm restored-item


WVSTART "get random tree"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVPASS bup get -v -ct -s get-src "$src_tree2_id" | tee get.log
WVPASS mkdir restore-src restore-dest
GIT_DIR=get-src WVPASS git archive "$src_tree2_id" | tar xf - -C restore-src
GIT_DIR=get-dest WVPASS git archive "$src_tree2_id" | tar xf - -C restore-dest
WVPASS "$top/t/compare-trees" -c restore-src/ restore-dest/
WVPASS rm -r restore-src restore-dest


WVSTART "get random commit"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVPASS bup get -v -ct -s get-src "$src_commit2_id" | tee get.log
WVPASS mkdir restore-src restore-dest
GIT_DIR=get-src WVPASS git archive "$src_commit2_id:" | tar xf - -C restore-src
GIT_DIR=get-dest WVPASS git archive "$src_commit2_id:" | tar xf - -C restore-dest
WVPASS "$top/t/compare-trees" -c restore-src/ restore-dest/
WVPASS rm -r restore-src restore-dest


WVSTART "get random save"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVPASS bup get -v -s get-src src/"$src_save2" | tee get.log
WVPASS mkdir restore-src restore-dest
GIT_DIR=get-src WVPASS git archive "$src_commit2_id:" | tar xf - -C restore-src
GIT_DIR=get-dest WVPASS git archive "$src_commit2_id:" | tar xf - -C restore-dest
WVPASS "$top/t/compare-trees" -c restore-src/ restore-dest/
WVPASS rm -r restore-src restore-dest


WVSTART "get branch"
export BUP_DIR=get-dest
WVPASS rm -r "$BUP_DIR"
WVPASS bup init
WVPASS bup get -vv -ct -s get-src src | tee get.log
WVPASS rm -r restore
WVPASS bup restore -C restore "/src/latest$(pwd)/src"
WVPASS "$top/t/compare-trees" -c src-2/ restore/src/
export GIT_DIR="$BUP_DIR"
dest_tree_id=$(WVPASS head -n 1 get.log) || exit $?
dest_commit_id=$(WVPASS tail -n -1 get.log) || exit $?
WVPASSEQ "$src_tree2_id" $dest_tree_id
WVPASSEQ "$src_commit2_id" $dest_commit_id
WVPASS git ls-tree $dest_tree_id
WVPASS git cat-file commit $dest_commit_id | head -n 1 \
    | WVPASS grep "^tree $dest_tree_id\$"
unset GIT_DIR


WVSTART "fast forwards"
# Test that incremental get works.
# Save src-1.
WVPASS rm -rf get-src src
WVPASS cp -a src-1 src
export BUP_DIR=get-src
WVPASS bup init
WVPASS bup index src
WVPASS bup save -tcn src src | tee save-output.log
src_tree1_id=$(WVPASS head -n 1 save-output.log) || exit $?
src_commit1_id=$(WVPASS tail -n -1 save-output.log) || exit $?
src_save1=$(WVPASS bup ls src | WVPASS head -n 1) || exit $?

export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init

# Get the first save without -n.
WVPASS bup get -v -ct -s get-src src | tee get.log
verify-get src/"$src_save1" src-1 get.log "$src_tree1_id" "$src_commit1_id"

# Get the first save with -n.
WVPASS bup get -v -ct -n src-ff -s get-src src | tee get.log
verify-get src-ff/"$src_save1" src-1 get.log "$src_tree1_id" "$src_commit1_id"

# Save src-2.
WVPASS rm -r src
WVPASS cp -a src-2 src
export BUP_DIR=get-src
WVPASS bup index src
WVPASS bup tick # Make sure the save names are different.
WVPASS bup save -tcn src src | tee save-output.log
src_tree2_id=$(WVPASS head -n 1 save-output.log) || exit $?
src_commit2_id=$(WVPASS tail -n -1 save-output.log) || exit $?
src_save2=$(WVPASS bup ls src | WVPASS head -n 2 | WVPASS tail -n 1) || exit $?

# Get the branch again without -n.
WVPASS bup get -v -ct -s get-src src | tee get.log
verify-get src/"$src_save2" src-2 get.log "$src_tree2_id" "$src_commit2_id"
# Make sure a run with nothing to do works too.
WVPASS bup get -v -ct -s get-src src | tee get.log
verify-get src/"$src_save2" src-2 get.log "$src_tree2_id" "$src_commit2_id"

# Get the branch again with -n.
WVPASS bup get -v -ct -n src-ff -s get-src src | tee get.log
verify-get src-ff/"$src_save2" src-2 get.log "$src_tree2_id" "$src_commit2_id"


WVSTART "get --force"
# Make sure we won't try to update an incompatible branch without --force.
WVPASS rm -r src
WVPASS cp -a src-1 src
export BUP_DIR=get-dest
WVPASS bup index src
WVPASS bup save -tcn src src | tee save-output.log
# Test without -n.
WVFAIL bup get -v -ct -s get-src src
WVPASS bup get -v -ct --force -s get-src src
verify-get src/latest src-2 get.log "$src_tree2_id"
# Test with -n.
WVPASS bup save -tcn src-copy src | tee save-output.log
WVFAIL bup get -v -ct -n src-copy -s get-src src
WVPASS bup get -v -ct -n src-copy --force -s get-src src | tee get.log
verify-get src-copy/latest src-2 get.log "$src_tree2_id"


WVSTART "get -r"
WVPASS bup get -r -:"$(pwd)/get-dest" -n remote-stored-src -s get-src src/latest
WVPASS rm -rf restore
WVPASS bup restore -C restore "/remote-stored-src/latest$(pwd)/src"
WVPASS "$top/t/compare-trees" -c src-2/ restore/src/


WVSTART "on get"
export BUP_DIR=get-dest
WVPASS rm -rf "$BUP_DIR"
WVPASS bup init
WVPASS bup on - get -n on-src-copy -s get-src src/latest
WVPASS rm -rf restore
WVPASS bup restore -C restore "/on-src-copy/latest$(pwd)/src"
WVPASS "$top/t/compare-trees" -c src-2/ restore/src/


WVPASS rm -rf "$tmpdir"
